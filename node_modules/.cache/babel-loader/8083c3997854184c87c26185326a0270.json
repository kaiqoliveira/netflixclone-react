{"ast":null,"code":"var _jsxFileName = \"/Users/kaiquedeoliveira/Desktop/projetos/netflixclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\nimport { Font } from \"@fortawesome/react-fontawesome\";\nimport \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      black: blackHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), featuredData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"Feito por Kaique Oliveira para praticar conceitos em React js, Javascript, HTML e CSS.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}, \"X/TsTIBWl4G5VJMk6QGmyiovK0c=\");","map":{"version":3,"sources":["/Users/kaiquedeoliveira/Desktop/projetos/netflixclone/src/App.js"],"names":["React","useEffect","useState","Tmdb","MovieRow","FeaturedMovie","Header","Font","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","scrollListener","window","scrollY","addEventListener","removeEventListener","map","item","key","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,gCAArB;AACA,OAAe,mCAAf;;AAEA,kBAAe,MAAM;AAAA;;AAEjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAE,EAAF,CAA1C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AAEJD,EAAAA,SAAS,CAAE,MAAI;AACX,UAAMa,OAAO,GAAG,YAAY;AACxB,UAAIC,IAAI,GAAG,MAAMZ,IAAI,CAACa,WAAL,EAAjB;AACAP,MAAAA,YAAY,CAACM,IAAD,CAAZ;AAIA,UAAIE,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAW,WAA1B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAkBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAAtD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAE,CAAF,CAAT,CAAcQ,KAAd,CAAoBC,OAApB,CAA4BL,YAA5B,CAAb;AACA,UAAIQ,UAAU,GAAG,MAAM1B,IAAI,CAAC2B,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AACApB,MAAAA,eAAe,CAACkB,UAAD,CAAf;AAGH,KAbD;;AAeAf,IAAAA,OAAO;AACV,GAjBQ,EAiBN,EAjBM,CAAT;AAmBIb,EAAAA,SAAS,CAAE,MAAI;AACX,UAAM+B,cAAc,GAAG,MAAM;AACzB,UAAIC,MAAM,CAACC,OAAP,GAAiB,EAArB,EAAwB;AACpBrB,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAFD,MAEK;AACDA,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,KAND;;AAOAoB,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,cAAlC;AAEA,WAAO,MAAK;AACRC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,cAArC;AACH,KAFD;AAGH,GAbQ,EAaP,EAbO,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAEA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEpB;AAAf;AAAA;AAAA;AAAA;AAAA,YAFA,EAICF,YAAY,iBACb,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YALA,eAQE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACKF,SAAS,CAAC6B,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACX,QAAC,QAAD;AAAoB,QAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAuC,QAAA,KAAK,EAAEF,IAAI,CAACb;AAAnD,SAAec,GAAf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YARF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA9DD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css'\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\nimport { Font } from \"@fortawesome/react-fontawesome\";\nimport {} from \"@fortawesome/free-solid-svg-icons\"\n\nexport default () => {\n\n    const [movieList, setMovieList] = useState ([]);\n    const [featuredData, setFeaturedData] = useState(null);\n    const [blackHeader, setBlackHeader] = useState(false);\n\nuseEffect (()=>{\n    const loadAll = async () => {\n        let list = await Tmdb.getHomeList();\n        setMovieList(list);\n\n\n        \n        let originals = list.filter(i=>i.slug === 'originals');\n        let randomChosen = Math.floor(Math.random() *  (originals[0].items.results.length - 1));\n        let chosen = originals [0].items.results[randomChosen];\n        let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n        setFeaturedData(chosenInfo);\n\n        \n    }\n\n    loadAll();\n}, []);\n\n    useEffect (()=>{\n        const scrollListener = () => {\n            if (window.scrollY > 10){\n                setBlackHeader(true); \n            }else{\n                setBlackHeader(false);\n            }\n        }\n        window.addEventListener('scroll', scrollListener);\n\n        return () =>{\n            window.removeEventListener('scroll', scrollListener);\n        }\n    },[]);\n\n\n    return (\n        <div className=\"page\">\n\n        <Header black={blackHeader}/>    \n\n        {featuredData &&\n        <FeaturedMovie item={featuredData}Â />\n        }\n\n          <section className=\"lists\">\n              {movieList.map((item, key)=>(\n                  <MovieRow key={key} title={item.title} items={item.items} />\n              ))}\n          </section>\n\n          <footer>\n              Feito por Kaique Oliveira para praticar conceitos em React js, Javascript, HTML e CSS.\n                \n          </footer>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}