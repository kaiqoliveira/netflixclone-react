{"ast":null,"code":"var _jsxFileName = \"/Users/kaiquedeoliveira/Desktop/projetos/netflixclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      console.log(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [featuredData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}, \"/mp4Zi9ytVHS+i5YC/5I14s5PB0=\");","map":{"version":3,"sources":["/Users/kaiquedeoliveira/Desktop/projetos/netflixclone/src/App.js"],"names":["React","useEffect","useState","Tmdb","MovieRow","FeaturedMovie","movieList","setMovieList","featuredData","setFeaturedData","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","console","log","map","item","key","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,kBAAe,MAAM;AAAA;;AAEjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAE,EAAF,CAA1C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AAEJD,EAAAA,SAAS,CAAE,MAAI;AACX,UAAMS,OAAO,GAAG,YAAY;AACxB,UAAIC,IAAI,GAAG,MAAMR,IAAI,CAACS,WAAL,EAAjB;AACAL,MAAAA,YAAY,CAACI,IAAD,CAAZ;AAIA,UAAIE,SAAS,GAAGF,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,IAAF,KAAW,WAA1B,CAAhB;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAkBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAAtD,CAAX,CAAnB;AACA,UAAIC,MAAM,GAAGX,SAAS,CAAE,CAAF,CAAT,CAAcQ,KAAd,CAAoBC,OAApB,CAA4BL,YAA5B,CAAb;AACA,UAAIQ,UAAU,GAAG,MAAMtB,IAAI,CAACuB,YAAL,CAAkBF,MAAM,CAACG,EAAzB,EAA6B,IAA7B,CAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACH,KAZD;;AAcAf,IAAAA,OAAO;AACV,GAhBQ,EAgBN,EAhBM,CAAT;AAmBI,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eAECF,YAAY,iBACb,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAHA,eAME;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACKF,SAAS,CAACwB,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACX,QAAC,QAAD;AAAoB,QAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAuC,QAAA,KAAK,EAAEF,IAAI,CAACV;AAAnD,SAAeW,GAAf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtCD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css'\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\n\nexport default () => {\n\n    const [movieList, setMovieList] = useState ([]);\n    const [featuredData, setFeaturedData] = useState(null);\n\nuseEffect (()=>{\n    const loadAll = async () => {\n        let list = await Tmdb.getHomeList();\n        setMovieList(list);\n\n\n        \n        let originals = list.filter(i=>i.slug === 'originals');\n        let randomChosen = Math.floor(Math.random() *  (originals[0].items.results.length - 1));\n        let chosen = originals [0].items.results[randomChosen];\n        let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n\n        console.log(chosenInfo);\n    }\n\n    loadAll();\n}, []);\n\n\n    return (\n        <div className=\"page\">\n\n        {featuredData &&\n        <FeaturedMovie item={featuredData}Â />\n        }\n\n          <section className=\"lists\">\n              {movieList.map((item, key)=>(\n                  <MovieRow key={key} title={item.title} items={item.items} />\n              ))}\n          </section>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}